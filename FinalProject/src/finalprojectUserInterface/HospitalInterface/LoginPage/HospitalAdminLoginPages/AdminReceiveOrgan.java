/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package finalprojectUserInterface.HospitalInterface.LoginPage.HospitalAdminLoginPages;

import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import finalprojectBackend.DB4OUtility.DB4OUtility;
import finalprojectBackend.OperatingSystem.OperatingSystem;
import finalprojectBackend.Enterprise.Hospital.Hospital;
import finalprojectBackend.Enterprise.Hospital.Doc;
import finalprojectBackend.Enterprise.Hospital.Patient;
import finalprojectBackend.Enterprise.Lab.Technician;
import finalprojectBackend.Enterprise.Logistics.Handler;
import finalprojectBackend.Enterprise.Logistics.Vehicle;
import finalprojectBackend.Organization.DonationAssignment;
import finalprojectUserInterface.MainJFrameForm;




/**
 *
 * @author supriyaa
 */
public class AdminReceiveOrgan extends javax.swing.JPanel {

    /**
     * Creates new form AdminReceiveOrgan
     */
    MainJFrameForm MainLPage;
    private OperatingSystem operatingSystem;
    private DB4OUtility dB4OUtility;
    Hospital hospital;

    public AdminReceiveOrgan(MainJFrameForm MainLPage, DB4OUtility dB4OUtility, OperatingSystem operatingSystem, Hospital h) {
        initComponents();
        this.MainLPage = MainLPage;
        this.dB4OUtility = dB4OUtility;
        this.operatingSystem = operatingSystem;
        this.hospital = h;

        populateTable();
        populateVehicleTable();
        populateLabTable();

        for (Doc d : operatingSystem.getDoctorDirectory()) {

            if (d.getHospitalName().equals(hospital.getEnterpriseName())) {
                DocCmb.addItem(d.getUserName());
            }

        }

        for (Patient pa : operatingSystem.getPatientDirectory()) {
            if (pa.getHospitalName().equals(hospital.getEnterpriseName())) {
                Patcmb.addItem(pa.getUserName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb2 = new javax.swing.JTable();
        titlelbl = new javax.swing.JLabel();
        reqbtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        blood = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        DocCmb = new javax.swing.JComboBox<>();
        Doclbl = new javax.swing.JLabel();
        Patcmb = new javax.swing.JComboBox<>();
        patlbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Blood group", "Entity name", "Status", "id"
            }
        ));
        jScrollPane1.setViewportView(tb1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 83, 593, 138));

        tb2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Handler Name", "Vehicle Name", "Vehicle Type", "Vehicle Number", "Description"
            }
        ));
        jScrollPane2.setViewportView(tb2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 333, 585, 126));

        titlelbl.setBackground(new java.awt.Color(255, 255, 255));
        titlelbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        titlelbl.setForeground(new java.awt.Color(0, 0, 0));
        titlelbl.setText("Search and Receive organ");
        add(titlelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, -1, -1));

        reqbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reqbtn.setText("Generate request");
        reqbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqbtnActionPerformed(evt);
            }
        });
        add(reqbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 659, -1, 40));

        tb3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Technician Name", "Lab Name"
            }
        ));
        jScrollPane3.setViewportView(tb3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 477, 585, 126));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Blood:");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("Dual Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Entity:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blood, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(blood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 239, -1, -1));

        add(DocCmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 649, 118, -1));

        Doclbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Doclbl.setForeground(new java.awt.Color(0, 0, 0));
        Doclbl.setText("Doctor:");
        add(Doclbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 653, -1, -1));

        add(Patcmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 689, 118, -1));

        patlbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        patlbl.setForeground(new java.awt.Color(0, 0, 0));
        patlbl.setText("Patient:");
        add(patlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 693, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/413051.jpg"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -4, 1300, 910));
    }// </editor-fold>//GEN-END:initComponents

    private void reqbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reqbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getDonationAssignmentList().toString());
        for (DonationAssignment d : operatingSystem.getDonationAssignmentList()) {
            System.out.println("populatetable " + d.getDonationEntityName());

            Object[] row = new Object[5];
            row[0] = d.getType();
            row[1] = d.getbGroup();
            row[2] = d.getDonationEntityName();
            row[3] = d.getDonationStatus();
            row[4] = d.getId();
            model.addRow(row);

        }

    }

    private void populateTableDual(String blood, String name) {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (DonationAssignment d : operatingSystem.getDonationAssignmentList()) {

            if (d.getbGroup().toLowerCase().contains(blood) && d.getDonationEntityName().toLowerCase().contains(name)) {
                Object[] row = new Object[5];
                row[0] = d.getType();
                row[1] = d.getbGroup();
                row[2] = d.getDonationEntityName();
                row[3] = d.getDonationStatus();
                row[4] = d.getId();
                model.addRow(row);
            }

        }

    }

    private void populateVehicleTable() {
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getDonationAssignmentList().toString());
        for (Handler h : operatingSystem.getHandlerDirectory()) {

            Object[] row = new Object[5];
            try {
                row[0] = h.getUserName();
                row[1] = h.getVehicle().getVehiclename();
                row[2] = h.getVehicle().getVehicletype();
                row[3] = h.getVehicle().getVehiclenum();
                row[4] = h.getVehicle().getVehicaldescription();
            } catch (Exception e) {
            }
            model.addRow(row);

        }

    }

    private void populateLabTable() {
        DefaultTableModel model = (DefaultTableModel) tb3.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getDonationAssignmentList().toString());
        for (Technician h : operatingSystem.getTechnicianDirectory()) {

            Object[] row = new Object[5];
            row[0] = h.getUserName();
            row[1] = h.getLaboratoryName();

            model.addRow(row);

        }

    }

    private void populateTableBlood(String name) {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (DonationAssignment d : operatingSystem.getDonationAssignmentList()) {

            if (d.getbGroup().toLowerCase().contains(name)) {
                Object[] row = new Object[5];
                row[0] = d.getType();
                try {
                    row[1] = d.getbGroup();
                    row[2] = d.getDonationEntityName();
                    row[3] = d.getDonationStatus();
                    row[4] = d.getId();
                } catch (Exception e) {

                }
                model.addRow(row);
            }

        }

    }

    private void populateTableName(String name) {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (DonationAssignment d : operatingSystem.getDonationAssignmentList()) {

            if (d.getDonationEntityName().toLowerCase().contains(name)) {
                Object[] row = new Object[5];
                row[0] = d.getType();
                row[1] = d.getbGroup();
                row[2] = d.getDonationEntityName();
                row[3] = d.getDonationStatus();
                row[4] = d.getId();
                model.addRow(row);
            }

        }

    }

    public void sendMail(String mail) {

        try {
            Properties properties = new Properties();
//            properties.put("mail.smtp.auth", "true");
//            properties.put("mail.smtp.starttls.enable", "true");
//            properties.put("mail.smtp.host", "smtp.gmail.com");
//            properties.put("mail.smtp.port", "587");
            properties.put("mail.smtp.user", "username");

            properties.put("mail.smtp.host", "smtp.gmail.com");
            properties.put("mail.smtp.port", "25");
            properties.put("mail.debug", "true");
            properties.put("mail.smtp.auth", "true");
            properties.put("mail.smtp.starttls.enable", "true");
            properties.put("mail.smtp.EnableSSL.enable", "true");

            properties.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            properties.setProperty("mail.smtp.socketFactory.fallback", "false");
            properties.setProperty("mail.smtp.port", "465");
            properties.setProperty("mail.smtp.socketFactory.port", "465");
            String myAccountEmail = "xyz@gmail.com";
            String password = "";
            Session session;
            session = Session.getInstance(properties, new javax.mail.Authenticator() {
                @Override
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    return new javax.mail.PasswordAuthentication(myAccountEmail, password);
                }
            });
            Message message = prepareMessage(mail,session, myAccountEmail, "abc@gmail.com", "msg", "sub");
            Transport.send(message);
// System.out.println("Successful sent");
        } catch (MessagingException ex) {
            ex.printStackTrace();
//            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private static Message prepareMessage(String mail,Session session, String myAccountEmail, String toAddress, String emailmsg, String emailsubject) {

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(myAccountEmail));
            message.setRecipient(Message.RecipientType.TO, new InternetAddress(toAddress));
            message.setSubject("Organ & Blood Transplantation System");
            message.setText(mail);
            return message;
        } catch (MessagingException ex) {
            ex.printStackTrace();
//            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DocCmb;
    private javax.swing.JLabel Doclbl;
    private javax.swing.JComboBox<String> Patcmb;
    private javax.swing.JTextField blood;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField name;
    private javax.swing.JLabel patlbl;
    private javax.swing.JButton reqbtn;
    private javax.swing.JTable tb1;
    private javax.swing.JTable tb2;
    private javax.swing.JTable tb3;
    private javax.swing.JLabel titlelbl;
    // End of variables declaration//GEN-END:variables
}
